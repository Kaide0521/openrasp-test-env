[plugin]
##插件获取堆栈的最大深度
# maxstack = 100
##文件存在验证开关，切换至扫描器模式
# filter = false

[plugin.timeout]
##对于单次HOOK点检测，JS插件整体超时时间（毫秒）
# millis = 100

[log]
##每个进程/线程每秒钟最大日志条数
# maxburst = 100
##报警日志记录的最大堆栈深度
# maxstack = 50

[syslog]
##报警是否开启 syslog
# enable = false
##syslog tag
# tag = "OpenRASP"
##syslog server url
# url = "tcp://127.0.0.1:514"
##syslog facility
# facility = 1
##syslog连接超时时间(毫秒)
# connection_timeout = 50
##syslog读超时时间(毫秒)
# read_timeout = 10
##syslog重连时间间隔(秒)
# reconnect_interval = 300

[block]
##拦截攻击后，状态码
# status_code = 302
##拦截攻击后，跳转到这个URL
# redirect_url = "https://rasp.baidu.com/blocked/?request_id=%request_id%"
##拦截攻击后，若期望响应类型为JSON，则根据此模板显示内容
# content_json="{\"error\":true, \"reason\": \"Request blocked by OpenRASP\", \"request_id\": \"%request_id%\"}"
##拦截攻击后，若期望响应类型为XML，则根据此模板显示内容
# content_xml="<?xml version=\"1.0\"?><doc><error>true</error><reason>Request blocked by OpenRASP</reason><request_id>%request_id%</request_id></doc>"
##拦截攻击后，若期望响应类型不为JSON/XML，则根据此模板显示内容
# content_html="<p>OpenRASP Request ID: %request_id%</p>"

[inject]
##对于以下URL，修改响应并注入HTML
# urlprefix = ""

[body]
##最多读取body的前多少字节
# maxbytes = 4096

[clientip]
##XFF header name
# header = ""

[security]
##当服务器不满足安全配置规范，是否拦截(sql连接)
# enforce_policy = false

[lru]
##正常攻击LRU缓存最大容量
# max_size = 1024

[webshell_callable]
##callable回调函数名黑名单
# blacklist = ["system", "exec", "passthru", "proc_open", "shell_exec", "popen", "pcntl_exec", "assert"]

[hook.white]
##white url list for each check type 
# webshell_callable = []
# command = []
# directory = []
# readFile = []
# writeFile = []
# copy = []
# rename = []
# fileUpload = []
# include = []
# dbConnection = []
# sql = []
# sqlPrepared = []
# ssrf = []
# webshell_eval = []
# webshell_command = []
# webshell_file_put_contents = []
# xss_echo = []

